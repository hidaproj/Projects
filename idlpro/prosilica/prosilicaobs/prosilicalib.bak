;  prosilicalib.pro

;  2012.11.02	t.k., k.i.,  for 64bit using prosilica_64.dll


;**************************************************************
function p_prosilica
;--------------------------------------------------------------
p={prosilica_param,   $
   expo:        long(50000l),  	$   ; exposure time [usec]
   framerate:   float(30),     	$   ; frame rate [frame/sec]
   gain:        0,      	$   ; gain 0-28
   binx:        1,      	$   ; Binning X 1-8
   biny:        1,           	$   ; Binning Y 1-1200
   Width:       1600,        	$   ; Width  max=1600 (binx=1)
   Height:      1200,         	$   ; Height  max=1200 (biny=1)
   RegionX:     0,           	$   ; start of region read out,pixel,left edge
   RegionY:     0,           	$   ; start of region read out,pixel,top edge
   clock:       79861111l,  	$   ; TimeStanmpFrequency [Hz]
   timelo:      0,           	$   ; Time stamp, lower 32-bits
   timehi:      0,           	$   ; Time stamp, upper 32-bits
   status:      0           	$   ; Status
   }

return,p
end

;**************************************************************
function CamSetParam,expo=expo,gain=gain,binx=binx,biny=biny, $
	width=width,height=height,regionx=regionx,regiony=regiony, $
	framerate=framerate
;--------------------------------------------------------------
common prosilica,prodll,p,img

;  expo	-	exposure, usec, long
;  gain	-	0,1,2,,,,20
;  binx,biny -	1,2,4,,
;  

if n_elements(expo) ne 0 then begin
	err=call_external(prodll,'SetCamExpo', expo, /all_value,/cdecl)
	p.expo=expo
endif

if n_elements(gain) then begin
	err=call_external(prodll,'SetCamGain', gain, /all_value,/cdecl)
	p.gain=gain
endif

if keyword_set(width) then p.width=width
if keyword_set(height) then p.height=height
if keyword_set(width) or keyword_set(height) then begin
	err=call_external(prodll,'SetCamSize', p.width, p.height, /all_value,/cdecl)
	img=intarr(p.width,p.height)
endif

if keyword_set(binx) then p.binx=binx
if keyword_set(biny) then p.biny=biny
if keyword_set(binx) or keyword_set(biny) then begin
	err=call_external(prodll,'SetCamBin', p.binx, p.biny, /all_value,/cdecl)
endif

set_region=0
if n_elements(regionx) ne 0 then begin
	p.regionx=regionx
	set_region=1
endif
if n_elements(regiony) ne 0 then begin
	p.regiony=regiony
	set_region=1
endif
if set_region then begin
	err=call_external(prodll,'SetCamRegion', p.regionx, p.regiony, /all_value,/cdecl)
endif

if keyword_set(framerate) then begin
	err=call_external(prodll,'SetCamFrate', framerate, /all_value,/cdecl)
	p.framerate=framerate
endif




return,p

END

;**************************************************************
function CamInit
;--------------------------------------------------------------
common prosilica,prodll,p,img

prodll='C:\Projects\cprog\VS2010\prosilica_64\x64\Debug\prosilica_64.dll'
err=call_external(prodll,'CamInit',/all_value,/cdecl)
p=p_prosilica()
p.status=err
img=intarr(p.width,p.height)
p=CamSetParam(expo=p.expo,gain=p.gain,width=p.width,height=p.height, $
	binx=p.binx,biny=p.biny,regionx=p.regionx,regiony=p.regiony)

return,p

END


;**************************************************************
PRO CamFin
;--------------------------------------------------------------
common prosilica,prodll,p,img

err=call_external(prodll,'CamFin',/all_value,/cdecl)

END


;**************************************************************
PRO GrubImg,nimg
;--------------------------------------------------------------
common prosilica,prodll,p,img

err=call_external(prodll,'GrabImg',nimg,/all_value,/cdecl)

END


;**************************************************************
PRO PrevImg
;--------------------------------------------------------------
common prosilica,prodll,p,img

r=call_external(prodll,'GrabImg',1,/all_value,/cdecl)
r=call_external(prodll,'DivBuf',0,/all_value,/cdecl)
r=call_external(prodll,'GoIdl',img,/cdecl)

if n_elements(img[*,0]) gt 1000 then  $
  tvscl,congrid(img,n_elements(img[*,0])/2,n_elements(img[0,*])/2) $
  else tvscl,img
plot,findgen(50)/50*4096,histogram(img,max=4096,min=0,nbins=50), $
    /noerase,/xstyle,charsize=0.5,position=[0.05,0.05,0.25,0.2],color=0

end

;**************************************************************
function Gigobs1
;--------------------------------------------------------------
common prosilica,prodll,p,img

r=call_external(prodll,'GrabImg',1,/all_value,/cdecl)
r=call_external(prodll,'DivBuf',0,/all_value,/cdecl)
r=call_external(prodll,'GoIdl',img,/cdecl)
;	img[*,*,*] store only 1 image even if nimg>1

return,img

end

;**************************************************************
function Gigobs,nimg
;--------------------------------------------------------------
common prosilica,prodll,p,img

imgs=intarr(p.width,p.height,nimg)
r=call_external(prodll,'GrabImg',nimg,/all_value,/cdecl)
for i=0,nimg-1 do begin
	r=call_external(prodll,'DivBuf',i,/all_value,/cdecl)
	r=call_external(prodll,'GoIdl',img,/cdecl)
	imgs[*,*,i]=img
endfor

return,imgs

end


;**************************************************************
pro test
common prosilica,prodll,p,img


p=CamInit()

stop
nimg=1
img=Gigobs(nimg)

stop

p=CamSetParam(expo=200000l)


stop
if p.Width gt 1000 then  window,0,xs=p.Width/2,ys=p.Height/2 $
else  window,0,xs=p.Width,ys=p.Height
img=intarr(p.Width,p.Height)
PrevImg,img



end
